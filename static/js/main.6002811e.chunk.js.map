{"version":3,"sources":["resources/components/Header.js","resources/components/HomeContent.js","resources/components/Footer.js","resources/components/WorkPlaces.js","resources/components/WorkPlace.js","resources/components/Week.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","className","to","title","HomeContent","value","setValue","SetTitle","workers","map","worker","key","id","pathname","name","placeholder","onChange","e","target","type","onClick","AddWorkerCallback","Footer","location","history","goBack","WorkPlaces","SetWorker","useEffect","t","GetWorkerById","match","params","console","log","places","place","v","AddPlaceCallback","WorkPlace","SetPlace","p","GetWorkplaceFrom","workplace","weeks","week","AddWeekCallback","Week","Object","keys","days","App","saveFileName","SetWorkers","item","cleaned","TitleCase","newWorker","Math","random","toString","substr","newPlace","splice","indexOf","newWeek","Maanantai","Tiistai","Keskiviikko","Torstai","Perjantai","Lauantai","Sunnuntai","push","w","Title","length","saveData","JSON","stringify","window","localStorage","setItem","Save","loaded","getItem","parsed","parse","Load","basename","path","exact","render","str","char","split","a","i","temp","word","y","toUpperCase","join","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6002811e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      <Link to=\"/\">\r\n        <h1>{props.title}</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction HomeContent(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [workers, SetWorkers] = useState([]);\r\n\r\n  function HandleChange(e) {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function HandleClick(e) {\r\n    props.AddWorkerCallback(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      {\r\n        (props.SetTitle(\"Työntekijät\"),\r\n        props.workers.map(worker => (\r\n          <div key={worker.id} className=\"Links\">\r\n            <button className=\"HomeDeleteButton\">X</button>\r\n            <Link\r\n              className=\"LinkButton\"\r\n              to={{ pathname: `${worker.id}`, worker }}\r\n            >\r\n              {worker.name}\r\n            </Link>\r\n          </div>\r\n        )))\r\n      }\r\n\r\n      <input\r\n        className=\"AddInput\"\r\n        placeholder=\"Lisää työntekijä\"\r\n        onChange={HandleChange}\r\n        type=\"text\"\r\n      ></input>\r\n      <button className=\"AddInputSubmit\" onClick={HandleClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeContent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n  function HandleClick() {\r\n    props.history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Footer\">\r\n      {props.location.pathname !== \"/\" ? (\r\n        <button className=\"BackButton\" onClick={HandleClick}>\r\n          Back\r\n        </button>\r\n      ) : (\r\n        <p className=\"FooterHomePageText\"></p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction WorkPlaces(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [worker, SetWorker] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const t = props.GetWorkerById(props.match.params.id);\r\n    if (typeof t !== \"undefined\") {\r\n      SetWorker(t);\r\n      props.SetTitle(t.name + \" --> \");\r\n      console.log(\"Setting worker to \" + t.name);\r\n    }\r\n  });\r\n\r\n  function HandleChange(e) {\r\n    const v = e.target.value;\r\n    setValue(v);\r\n  }\r\n\r\n  function HandleClick(e) {\r\n    props.AddPlaceCallback(value, worker);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      {typeof worker.name !== \"undefined\"\r\n        ? worker.places.map(place => (\r\n            <div key={worker.id + place.name} className=\"Links\">\r\n              <button className=\"HomeDeleteButton\">X</button>\r\n              <Link\r\n                className=\"LinkButton\"\r\n                to={{\r\n                  pathname: `${worker.id}/${place.name}`,\r\n                  worker: worker,\r\n                  place: place\r\n                }}\r\n              >\r\n                {place.name}\r\n              </Link>\r\n            </div>\r\n          ))\r\n        : console.log(\"Worker not found...\")}\r\n      <input\r\n        className=\"AddInput\"\r\n        placeholder=\"Lisää työkohde\"\r\n        onChange={HandleChange}\r\n        type=\"text\"\r\n      ></input>\r\n      <button className=\"AddInputSubmit\" onClick={HandleClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkPlaces;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction WorkPlace(props) {\r\n  console.log(props);\r\n  const [value, setValue] = useState(\"\");\r\n  const [worker, SetWorker] = useState({});\r\n  const [place, SetPlace] = useState({});\r\n  useEffect(() => {\r\n    const t = props.GetWorkerById(props.match.params.id);\r\n    if (typeof t !== \"undefined\") {\r\n      SetWorker(t);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (typeof worker !== \"undefined\") {\r\n      const p = props.GetWorkplaceFrom(props.match.params.workplace, worker);\r\n      if (typeof p !== \"undefined\") {\r\n        console.log(\"Setting place to \" + p.name);\r\n        SetPlace(p);\r\n        props.SetTitle(worker.name + \" -> \" + p.name);\r\n      }\r\n    }\r\n  }, [worker]);\r\n\r\n  function HandleChange(e) {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function HandleClick(e) {\r\n    props.AddWeekCallback(value, place, worker);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      {typeof worker !== \"undefined\" && typeof place.weeks !== \"undefined\"\r\n        ? place.weeks.map(week => (\r\n            <div key={worker.id + place.name + week.name} className=\"Links\">\r\n              <button className=\"HomeDeleteButton\">X</button>\r\n              <Link\r\n                className=\"LinkButton\"\r\n                to={{\r\n                  pathname: `${worker.id}/${place.name}`,\r\n                  worker: worker,\r\n                  place: place,\r\n                  week: week\r\n                }}\r\n              >\r\n                {week.name}\r\n              </Link>\r\n            </div>\r\n          ))\r\n        : console.log(\"Doesn't exist\")}\r\n      <input\r\n        className=\"AddInput\"\r\n        placeholder=\"Lisää viikko\"\r\n        onChange={HandleChange}\r\n        type=\"text\"\r\n      ></input>\r\n      <button className=\"AddInputSubmit\" onClick={HandleClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkPlace;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Week(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      {\r\n        (props.SetTitle(\r\n          props.location.worker.name +\r\n            \" -> \" +\r\n            props.location.place.name +\r\n            \" -> \" +\r\n            props.location.week.name\r\n        ),\r\n        Object.keys(props.location.week.days).map(key => (\r\n          <div>\r\n            <label className=\"Key\">{key}</label>\r\n            <label className=\"Value\">{props.location.week.days[key]}</label>\r\n          </div>\r\n        )))\r\n      }\r\n      <div>\r\n        <label className=\"Key\">Yhteensä</label>\r\n        <label className=\"Value\">0</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Week;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./resources/components/Header\";\nimport HomeContent from \"./resources/components/HomeContent\";\nimport Footer from \"./resources/components/Footer\";\nimport WorkPlaces from \"./resources/components/WorkPlaces\";\nimport WorkPlace from \"./resources/components/WorkPlace\";\nimport Week from \"./resources/components/Week\";\n\nfunction App() {\n  const saveFileName = \"WorkTimeAppData\";\n  const [workers, SetWorkers] = useState([]);\n  const [title, SetTitle] = useState([]);\n  let firstLoad = true;\n\n  useEffect(() => {\n    if (workers.length > 0) {\n      Save();\n    }\n  }, [workers]);\n\n  useEffect(() => {\n    Load();\n  }, []);\n\n  function Save() {\n    const saveData = JSON.stringify(workers);\n    window.localStorage.setItem(saveFileName, saveData);\n    console.log(\"Saving... \" + saveData);\n  }\n\n  function Load() {\n    const loaded = window.localStorage.getItem(saveFileName);\n    const parsed = JSON.parse(loaded);\n    if (parsed) {\n      SetWorkers(parsed);\n      console.log(\"Loading users...\");\n    }\n  }\n\n  function AddWorkerCallback(worker) {\n    if (!worker) return;\n    for (const item in workers) {\n      if (workers[item].name === worker) {\n        return;\n      }\n    }\n    const cleaned = TitleCase(worker);\n    const id = UniqueID();\n    const newWorker = {\n      id: id,\n      name: cleaned,\n      places: []\n    };\n\n    SetWorkers([...workers, newWorker]);\n  }\n\n  function AddPlaceCallback(place, worker) {\n    const cleaned = TitleCase(place);\n    const newPlace = {\n      name: cleaned,\n      weeks: []\n    };\n\n    workers.splice(workers.indexOf(worker), 1);\n    worker.places = [...worker.places, newPlace];\n    SetWorkers([...workers, worker]);\n  }\n\n  function AddWeekCallback(week, place, worker) {\n    const cleaned = TitleCase(week);\n    const newWeek = {\n      name: cleaned,\n      days: {\n        Maanantai: 0,\n        Tiistai: 0,\n        Keskiviikko: 0,\n        Torstai: 0,\n        Perjantai: 0,\n        Lauantai: 0,\n        Sunnuntai: 0\n      }\n    };\n\n    place.weeks.push(newWeek);\n    workers.splice(workers.indexOf(worker), 1);\n    SetWorkers([...workers, worker]);\n  }\n\n  function GetWorkerById(id) {\n    for (const item in workers) {\n      if (workers[item].id === id) {\n        return workers[item];\n      }\n    }\n  }\n\n  function GetWorkplaceFrom(name, w) {\n    for (const place in w.places) {\n      if (w.places[place].name === name) {\n        return w.places[place];\n      }\n    }\n  }\n\n  function Title(title) {\n    SetTitle(title);\n  }\n\n  return (\n    <Router basename=\"/Worktime-App\">\n      <div className=\"App\">\n        <Header title={title} />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeContent\n                {...props}\n                workers={workers}\n                AddWorkerCallback={AddWorkerCallback}\n                SetTitle={Title}\n                GetWorkerById={GetWorkerById}\n              />\n            )}\n          />\n          <Route\n            path=\"/:id\"\n            exact\n            render={props => (\n              <WorkPlaces\n                {...props}\n                AddPlaceCallback={AddPlaceCallback}\n                SetTitle={Title}\n                GetWorkerById={GetWorkerById}\n              />\n            )}\n          />\n          <Route\n            path=\"/:id/:workplace\"\n            exact\n            render={props => (\n              <WorkPlace\n                {...props}\n                AddWeekCallback={AddWeekCallback}\n                SetTitle={Title}\n                GetWorkerById={GetWorkerById}\n                GetWorkplaceFrom={GetWorkplaceFrom}\n              />\n            )}\n          />\n          />\n          <Route\n            path=\"/:id/:workplace/:week\"\n            exact\n            render={props => <Week {...props} SetTitle={Title} />}\n          />\n        </Switch>\n        <Route render={props => <Footer {...props} />} />\n      </div>\n    </Router>\n  );\n\n  function UniqueID() {\n    return (\n      \"_\" +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  // Capitalizes every first letter of a word in a string\n  function TitleCase(str) {\n    let split = str.split(\" \");\n    let a = [];\n    for (let i = 0; i < split.length; i++) {\n      let temp = split[i];\n      let word = \"\";\n      for (let y = 0; y < temp.length; y++) {\n        if (y === 0 && IsAlpha(temp[y])) {\n          word += temp[y].toUpperCase();\n          continue;\n        }\n\n        word += temp[y];\n      }\n\n      a.push(word);\n    }\n\n    return a.join(\" \");\n  }\n\n  // Capitalizes first letter of a string\n  function CapitalizeFirst(str) {\n    // Split the string into an array of strings\n    let splittedArray = str.split(\" \");\n    let a = [];\n\n    // Loop through all the strings in the array\n    for (let i = 0; i < splittedArray.length; i++) {\n      let currentString = splittedArray[i];\n\n      // If we are currently at the first string of the array (First word of the sentence)\n      if (i === 0) {\n        // temporary string\n        let tempString = \"\";\n\n        // Get the first letter of the string and capitalize it\n        tempString += currentString[i][0].toUpperCase();\n\n        // Loop through the string and\n        // add the rest of the letters to tempString\n        for (let y = 1; y < currentString.length; y++) {\n          tempString += currentString[y];\n        }\n\n        // Set our current string with the new (capitalized) string\n        currentString = tempString;\n      }\n\n      // Add it to the array\n      a.push(currentString);\n    }\n\n    // Combine the array into one string\n    return a.join(\" \");\n  }\n\n  // Checks if the character is an alphabetic letter (i.e not a number)\n  function IsAlpha(char) {\n    return char.length === 1 && char.match(/[a-z]/i);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./resources/css/Reset.css\";\nimport \"./resources/css/Style.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}