{"version":3,"sources":["resources/components/Header.js","resources/components/HomeContent.js","resources/components/Footer.js","resources/components/WorkPlaces.js","resources/components/WorkPlace.js","resources/components/Week.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","to","title","HomeContent","useState","value","setValue","workers","map","worker","key","id","pathname","name","placeholder","onChange","e","target","type","onClick","AddWorkerCallback","Footer","WorkPlaces","useEffect","location","places","place","v","AddPlaceCallback","WorkPlace","weeks","week","AddWeekCallback","Week","console","log","Object","keys","days","App","SetWorkers","item","cleaned","TitleCase","newWorker","Math","random","toString","substr","newPlace","splice","indexOf","newWeek","Maanantai","Tiistai","Keskiviikko","Torstai","Perjantai","Lauantai","Sunnuntai","push","basename","path","exact","render","str","char","split","a","i","length","temp","word","y","match","toUpperCase","join","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5b6d320.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"Header\">\r\n      <Link to=\"/\">\r\n        <h1>{props.title}</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction HomeContent(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [workers, SetWorkers] = useState([]);\r\n\r\n  function HandleChange(e) {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function HandleClick(e) {\r\n    props.AddWorkerCallback(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      <Header title=\"Työntekijät\" />\r\n      {props.workers.map(worker => (\r\n        <div key={worker.id} className=\"Links\">\r\n          <button className=\"HomeDeleteButton\">X</button>\r\n          <Link\r\n            className=\"LinkButton\"\r\n            to={{ pathname: `${worker.id}`, worker }}\r\n          >\r\n            {worker.name}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n\r\n      <input\r\n        className=\"AddInput\"\r\n        placeholder=\"Lisää työntekijä\"\r\n        onChange={HandleChange}\r\n        type=\"text\"\r\n      ></input>\r\n      <button className=\"AddInputSubmit\" onClick={HandleClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeContent;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return <div className=\"Footer\"></div>;\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction WorkPlaces(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [worker, SetWorker] = useState([]);\r\n\r\n  useEffect(() => {});\r\n\r\n  function HandleChange(e) {\r\n    const v = e.target.value;\r\n    setValue(v);\r\n  }\r\n\r\n  function HandleClick(e) {\r\n    props.AddPlaceCallback(value, props.location.worker);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      <Header title={`${props.location.worker.name}->Työkohteet`} />\r\n      {props.location.worker.places.map(place => (\r\n        <div key={props.location.worker.id + place.name} className=\"Links\">\r\n          <button className=\"HomeDeleteButton\">X</button>\r\n          <Link\r\n            className=\"LinkButton\"\r\n            to={{\r\n              pathname: `${props.location.worker.id}/${place.name}`,\r\n              worker: props.location.worker,\r\n              place: place\r\n            }}\r\n          >\r\n            {place.name}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n      <input\r\n        className=\"AddInput\"\r\n        placeholder=\"Lisää työkohde\"\r\n        onChange={HandleChange}\r\n        type=\"text\"\r\n      ></input>\r\n      <button className=\"AddInputSubmit\" onClick={HandleClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkPlaces;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction WorkPlace(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  useEffect(() => {});\r\n\r\n  function HandleChange(e) {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function HandleClick(e) {\r\n    props.AddWeekCallback(value, props.location.place, props.location.worker);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      <Header\r\n        title={`${props.location.worker.name}->${props.location.place.name}->Viikot`}\r\n      />\r\n      {props.location.place.weeks.map(week => (\r\n        <div\r\n          key={props.location.worker.id + props.location.place.name + week.name}\r\n          className=\"Links\"\r\n        >\r\n          <button className=\"HomeDeleteButton\">X</button>\r\n          <Link\r\n            className=\"LinkButton\"\r\n            to={{\r\n              pathname: `${props.location.place.name}/${week.name}`,\r\n              worker: props.location.worker,\r\n              place: props.location.place,\r\n              week: week\r\n            }}\r\n          >\r\n            {week.name}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n      <input\r\n        className=\"AddInput\"\r\n        placeholder=\"Lisää viikko\"\r\n        onChange={HandleChange}\r\n        type=\"text\"\r\n      ></input>\r\n      <button className=\"AddInputSubmit\" onClick={HandleClick}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkPlace;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Week(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  useEffect(() => {\r\n    console.log(props);\r\n  });\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      <Header\r\n        title={`${props.location.worker.name}->${props.location.place.name}->${props.location.week.name}`}\r\n      />\r\n\r\n      {Object.keys(props.location.week.days).map(key => (\r\n        <div>\r\n          <label className=\"Key\">{key}</label>\r\n          <label className=\"Value\">{props.location.week.days[key]}</label>\r\n        </div>\r\n      ))}\r\n      <div>\r\n        <label className=\"Key\">Yhteensä</label>\r\n        <label className=\"Value\">0</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Week;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./resources/components/Header\";\nimport HomeContent from \"./resources/components/HomeContent\";\nimport Footer from \"./resources/components/Footer\";\nimport WorkPlaces from \"./resources/components/WorkPlaces\";\nimport WorkPlace from \"./resources/components/WorkPlace\";\nimport Week from \"./resources/components/Week\";\n\nfunction App() {\n  const [workers, SetWorkers] = useState([]);\n\n  useEffect(() => {});\n\n  function AddWorkerCallback(worker) {\n    if (!worker) return;\n    for (const item in workers) {\n      if (workers[item].name === worker) {\n        return;\n      }\n    }\n    const cleaned = TitleCase(worker);\n    const id = UniqueID();\n    const newWorker = {\n      id: id,\n      name: cleaned,\n      places: []\n    };\n\n    SetWorkers([...workers, newWorker]);\n  }\n\n  function AddPlaceCallback(place, worker) {\n    const cleaned = TitleCase(place);\n    const newPlace = {\n      name: cleaned,\n      weeks: []\n    };\n\n    workers.splice(workers.indexOf(worker), 1);\n    worker.places = [...worker.places, newPlace];\n    SetWorkers([...workers, worker]);\n  }\n\n  function AddWeekCallback(week, place, worker) {\n    const cleaned = TitleCase(week);\n    const newWeek = {\n      name: cleaned,\n      days: {\n        Maanantai: 0,\n        Tiistai: 0,\n        Keskiviikko: 0,\n        Torstai: 0,\n        Perjantai: 0,\n        Lauantai: 0,\n        Sunnuntai: 0\n      }\n    };\n\n    place.weeks.push(newWeek);\n    workers.splice(workers.indexOf(worker), 1);\n    SetWorkers([...workers, worker]);\n  }\n\n  return (\n    <Router basename=\"/Worktime-App\">\n      <div className=\"App\">\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeContent\n                {...props}\n                workers={workers}\n                AddWorkerCallback={AddWorkerCallback}\n              />\n            )}\n          />\n          <Route\n            path=\"/:id\"\n            exact\n            render={props => (\n              <WorkPlaces {...props} AddPlaceCallback={AddPlaceCallback} />\n            )}\n          />\n          <Route\n            path=\"/:id/:workplace\"\n            exact\n            render={props => (\n              <WorkPlace {...props} AddWeekCallback={AddWeekCallback} />\n            )}\n          />\n          />\n          <Route\n            path=\"/:id/:workplace/:week\"\n            exact\n            render={props => <Week {...props} />}\n          />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n\n  function UniqueID() {\n    return (\n      \"_\" +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  // Capitalizes every first letter of a word in a string\n  function TitleCase(str) {\n    let split = str.split(\" \");\n    let a = [];\n    for (let i = 0; i < split.length; i++) {\n      let temp = split[i];\n      let word = \"\";\n      for (let y = 0; y < temp.length; y++) {\n        if (y == 0 && IsAlpha(temp[y])) {\n          word += temp[y].toUpperCase();\n          continue;\n        }\n\n        word += temp[y];\n      }\n\n      a.push(word);\n    }\n\n    return a.join(\" \");\n  }\n\n  // Capitalizes first letter of a string\n  function CapitalizeFirst(str) {\n    // Split the string into an array of strings\n    let splittedArray = str.split(\" \");\n    let a = [];\n\n    // Loop through all the strings in the array\n    for (let i = 0; i < splittedArray.length; i++) {\n      let currentString = splittedArray[i];\n\n      // If we are currently at the first string of the array (First word of the sentence)\n      if (i == 0) {\n        // temporary string\n        let tempString = \"\";\n\n        // Get the first letter of the string and capitalize it\n        tempString += currentString[i][0].toUpperCase();\n\n        // Loop through the string and\n        // add the rest of the letters to tempString\n        for (let y = 1; y < currentString.length; y++) {\n          tempString += currentString[y];\n        }\n\n        // Set our current string with the new (capitalized) string\n        currentString = tempString;\n      }\n\n      // Add it to the array\n      a.push(currentString);\n    }\n\n    // Combine the array into one string\n    return a.join(\" \");\n  }\n\n  // Checks if the character is an alphabetic letter (i.e not a number)\n  function IsAlpha(char) {\n    return char.length === 1 && char.match(/[a-z]/i);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./resources/css/Reset.css\";\nimport \"./resources/css/Style.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}